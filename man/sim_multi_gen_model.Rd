% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_gen_model.R
\name{sim_multi_gen_model}
\alias{sim_multi_gen_model}
\title{Define a genetic model for two or more traits}
\usage{
sim_multi_gen_model(genome, qtl.model, geno, prob.corr, pos.corr = TRUE, ...)
}
\arguments{
\item{genome}{An object of class \code{genome}.}

\item{qtl.model}{A matrix specifying the QTL model. Each row corresponds to
a different QTL. The first column gives the chromosome number, the second 
column gives the locus position (in cM), the third column gives the additive effect of
the favorable QTL allele (\code{a}) and the fourth column gives the dominance
effect at that QTL (\code{d}). If the matrix is one of NA, QTL will be
randomly assigned based on the number of rows in the matrix. If the genetic 
architecture of multiple traits is desired, a list of length \code{n_trait}
of \code{qtl.model} matrices can be provided. See \emph{Details} for more 
information.}

\item{geno}{Genotype data on a population to phenotype. Can be a matrix of dimensions
\code{n.ind} x \code{n.loci}, the elements of which must be z {0, 1, 2}, or a list
of such matrices.}

\item{prob.corr}{A matrix of three columns defining the probabilities
that QTL for two or more traits are in some form that might confer genetic 
correlation. The first column sets the maximum distance between a QTL from 
a second trait and a QTL from the first trait, the second column is the
probability that QTL from a second trait have that maximum distance, and the 
third column specifies the minimum correlation (i.e. linkage disequilibrium) 
between QTL of one trait and QTL of another. Pleiotropic QTL can be simulated 
by providing a 0 in the first column, and no genetic linkage is simulated if 
50 is in the first column.}

\item{pos.cor}{A logical indicating whether the two traits should be positively correlated.}
}
\description{
Generates a genetic model for two or more traits with desired genetic correlation.
}
\details{
QTL are simulated by sampling or specifying existing markers, which become "hidden."

The \code{qtl.model} matrix specifies the information for this assignment. The 
first column in this matrix is the chromosome number. The second column is 
the QTL position. The third column is the additive effect of the "1" allele
at the QTL (\code{a}). Genotypes homozygous for the "1" allele are assigned a 
genotypic value of \code{a} and genotypes homozygous for the "-1" allele are 
assigned a genotypic value of \code{-a}. The value of \code{a} provided in 
\code{qtl.model} can be negative. The fourth column is the dominance effect at the 
QTL. If non-zero, this value can be larger that \code{a} or smaller than \code{-a} 
(overdominance). The genotypic value of heterozygotes at the QTL is \code{d}.
 
Although QTL for two traits can be linked, depending on the population, they
may not be highly correlated. If a correlation between two traits is desired,
this function will first resample markers to become QTL based on the desired
linkaged and correlations between the genotypes at those QTL. Next, the function
will edit the additive effects in all but the first trait to 
induce the desired correlation between traits.

Other arguments include:
\describe{
  \item{\code{add.dist}}{The distribution of additive effects of QTL (if additive 
  effects are not provided in the \code{qtl.model} input). Can be 
  \code{"normal"} or \code{"geometric"}. For a distribution of \code{"normal"}, 
  additive effects are generated via the \code{\link[stats]{rnorm}} function.
  For a distribution of \code{"geometric"}, additive effects are calculated for
  the k-th QTL as \eqn{a^k} where \eqn{a = (1 - L) / (1 + L)} and \eqn{L} is 
  the number of QTL (Lande and Thompson, 1990).}
  \item{\code{dom.dist}}{The distribution of dominance effects of QTL (if dominance
  effects are not provided in the \code{qtl.model} input). Can be 
  \code{"normal"} for normally-distributed dominance effects.}
  \item{\code{max.qtl}}{The maximum number of QTL in the simulation experiment. Must
  be passed if the QTL are randomly sampled. If a trait is controlled by \emph{L} QTL
  and \code{max.qtl = M}, then \emph{M} - \emph{L} QTL are given NULL effects.
  This is useful if you want to simulate variable genetic architecture, but keep
  the number of SNP markers constant.}
}
}
\examples{
# Load some historic data
data("s2_cap_haploid")
data("s2_snp_info")

# Create a genome
map <- lapply(split(s2_snp_info, s2_snp_info$chrom), 
              function(chr) structure(chr$cM_pos, names = chr$rs) )

genome <- sim_genome(map = map, type = "hypred")

# Simulate two traits with 30 QTL, 1/3 with pairwise linkage of 0 < x <= 2 cM
# and 2/3 with pairwise linkage of 2 < x <= 20. The first set of QTL should have
# an LD of at least 0.5, and the second set of QTL should have an LD of at least
# 0.1
qtl.model <- replicate(2, matrix(nrow = 30, ncol = 4), simplify = FALSE)
prob.corr <- cbind(c(2, 20), c(0.333, 0.667), c(0.5, 0.1))

# Simulate the genetic architecture
genome <- sim_multi_gen_model(genome = genome, qtl.model = qtl.model, 
                              geno = s2_cap_haploid, prob.corr = prob.corr,
                              pos.corr = TRUE, add.dist = "geometric", max.qtl = 30)

pop <- create_pop(genome = genome, geno = s2_cap_haploid)

# Genetic correlation prior to adjustment
cor(pop$geno_val$trait1, pop$geno_val$trait2)

# Adjust the genome
prob.corr <- cbind(2, 1, 0.3)
genome <- adj_gen_model(genome = genome, geno = s2_cap_haploid, prob.corr = prob.corr, 
pos.corr = T)
pop <- create_pop(genome = genome, geno = s2_cap_haploid)

# Genetic correlation after adjustment
cor(pop$geno_val$trait1, pop$geno_val$trait2)

}
