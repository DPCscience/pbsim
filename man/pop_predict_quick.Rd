% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/popvar_functions.R
\name{pop_predict_quick}
\alias{pop_predict_quick}
\title{Quicker procedures for PopVar}
\usage{
pop_predict_quick(genome, map, training.pop, founder.pop, crossing.block, k.sp,
  map.function = c("haldane", "kosambi", "cf", "morgan"))
}
\arguments{
\item{genome}{An object of class \code{genome}.}

\item{map}{An object of class map to simulate the virtual bi-parental populations.}

\item{training.pop}{An object of class \code{pop} with the elements \code{geno} and 
\code{pheno_val}. This is used as the training population.}

\item{founder.pop}{An object of class \code{pop} with the geno information for
the parents. Additional individuals can be present in \code{parent_pop}. They
will be filtered according to the parents in the \code{crossing_block}.}

\item{crossing.block}{A crossing block detailing the crosses to make. Must be a
\code{data.frame} with 2 columns: the first gives the name of parent 1, and the 
second gives the name of parent 2. See \code{\link{sim_crossing_block}}.}

\item{k.sp}{The standardized selection coefficient (e.g. a selection intensity of 0.1 means k_sp ~ 1.745).}

\item{map.function}{The map function for converting genetic distance to recomination fraction.}
}
\description{
Quicker procedures for PopVar
}
\examples{

# Simulate a genome
n.mar  <- c(505, 505, 505)
len <- c(120, 130, 140)

genome <- sim_genome(len, n.mar)

# Simulate another genome for use in creating the bi-parental populations
genome_use <- sim_genome(len, n.mar)

# Simulate a quantitative trait influenced by 50 QTL
qtl.model <- matrix(NA, 50, 4)
genome <- sim_gen_model(genome = genome, qtl.model = qtl.model, 
                        add.dist = "geometric", max.qtl = 50)
                        
# Remove QTL from the second genome map
map_use <- lapply(genome_use$map, function(chr) chr[setdiff(names(chr), qtlnames(genome))])

# Simulate the genotypes of eight founders
founder_pop <- sim_founders(genome, n.str = 8)
founder_pop <- sim_phenoval(pop = founder_pop, h2 = 0.5)

ped <- sim_pedigree(n.ind = 100, n.selfgen = 2)

# Extract the founder names
parents <- indnames(founder_pop)

# Generate a crossing block with 5 crosses
cb <- sim_crossing_block(parents = parents, n.crosses = 5)

# Use the map in the second genome to predict the genetic variance in the 
# bi-parental populations
pop_predict_quick(genome = genome, map = map_use, training.pop = founder_pop, 
                  founder.pop = founder_pop, crossing.block = cb, k.sp = 1.745, 
                  map.function = "haldane")



}
