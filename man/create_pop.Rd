% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_pop.R
\name{create_pop}
\alias{create_pop}
\title{Create a population object}
\usage{
create_pop(genome, geno)
}
\arguments{
\item{genome}{An object of class \code{genome}.}

\item{geno}{Genotype data on a population to phenotype. Can be a matrix of dimensions
\code{n.ind} x \code{n.loci}, the elements of which must be z {0, 1, 2}, or a list
of such matrices.}
}
\value{
An object of class \code{pop} with genotype information for the individuals in
that population and the genotypic value of those individuals.

The genotypic value of individuals is calculcated as the sum of the QTL effects
carried by each individual. The genetic variance is calculated as the variance
of these genotypic values (\eqn{V_G = var(g)}).
}
\description{
Assembles genotype data and into a \code{pop} object.
}
\details{
A \code{pop} is similar to a \code{cross} object in \code{\link[qtl]{qtl-package}} 
(see \code{\link[qtl]{read.cross}}). The \code{pop} object stores information on the
genome, the genotypes at genetic markers, and phenotypes. The \code{pop} object is
meant to be a bit more flexible, without the pedigree or family structure required in
a \code{cross} object.
}
\examples{

# Load some historic data
data("s2_cap_genos")
data("s2_snp_info")

# Create a genome with genetic architecture
len <- tapply(s2_snp_info$cM_pos, s2_snp_info$chrom, max)
n_mar <- tapply(s2_snp_info$cM_pos, s2_snp_info$chrom, length)
map <- lapply(split(s2_snp_info, s2_snp_info$chrom), function(chr) structure(chr$cM_pos, names = chr$rs) )

genome <- sim_genome(len = len, n.mar = n_mar, map = map)

# Simulate a a trait with 15 QTL
qtl.model <- matrix(nrow = 15, ncol = 4)

genome <- sim_gen_model(genome, qtl.model, add.dist = "geometric")

# Add QTL to the geno matrix
new_geno <- fill_qtl_geno(genome = genome, geno = s2_cap_genos)

pop <- create_pop(genome = genome, geno = new_geno)

}
