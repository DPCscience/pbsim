% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_pop.R
\name{create_pop}
\alias{create_pop}
\title{Create a population object}
\usage{
create_pop(genome, geno, ignore.gen.model = FALSE)
}
\arguments{
\item{genome}{An object of class \code{genome}.}

\item{geno}{Genotype data on a population to phenotype. If the genome type is 
\code{"pbsim"}, must be a matrix of dimensions \code{n.ind} x \code{n.loci}, 
the elements of which must be z {0, 1, 2}, or a list of such matrices. If the 
genome type is \code{"hypred"}, must be an array of dimensions \code{2} x 
\code{n.loci} x \code{n.ind}, the elements of which must be z {0, 1}.}

\item{ignore.gen.model}{Logical - should any gene model be ignored when creating
the population? Use this to force a population without a gene model.}
}
\value{
An object of class \code{pop} with genotype information for the individuals in
that population and the genotypic value of those individuals.

The genotypic value of individuals is calculcated as the sum of the QTL effects
carried by each individual. The genetic variance is calculated as the variance
of these genotypic values (\eqn{V_G = var(g)}).
}
\description{
Assembles genotype data and into a \code{pop} object.
}
\details{
A \code{pop} is similar to a \code{cross} object in \code{\link[qtl]{qtl-package}} 
(see \code{\link[qtl]{read.cross}}). The \code{pop} object stores information on the
genome, the genotypes at genetic markers, and phenotypes. The \code{pop} object is
meant to be a bit more flexible, without the pedigree or family structure required in
a \code{cross} object.
}
\examples{

# Load historic data
data("s2_cap_genos")
data("s2_snp_info")

# Create a genome with genetic architecture
map <- lapply(split(s2_snp_info, s2_snp_info$chrom), function(chr) structure(chr$cM_pos, names = chr$rs) )

genome <- sim_genome(map = map)

# Simulate a a trait with 15 QTL
qtl.model <- matrix(nrow = 15, ncol = 4)

genome <- sim_gen_model(genome, qtl.model, add.dist = "geometric", max.qtl = 15)

pop <- create_pop(genome = genome, geno = s2_cap_genos)


## Use haploid data and a 'hypred' genome
data("s2_cap_haploid")

genome <- sim_genome(map = map, type = "hypred")

genome <- sim_gen_model(genome, qtl.model, add.dist = "geometric", max.qtl = 15)

pop <- create_pop(genome = genome, geno = s2_cap_haploid)


}
