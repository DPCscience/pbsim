% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim_family.R
\name{sim_family}
\alias{sim_family}
\title{Simulate a family from a pedigree}
\usage{
sim_family(genome, pedigree, founder.pop, ignore.gen.model, ...)
}
\arguments{
\item{genome}{An object of class \code{genome}.}

\item{pedigree}{A \code{pedigree} detailing the scheme to develop the family.
Use \code{\link{sim_pedigree}} to generate.}

\item{founder.pop}{An object of class \code{pop} with the geno information for
the founders. Use the \code{\link{subset.pop}} function to subset a \code{pop}
object.}

\item{ignore.gen.model}{Logical - should the gene model be ignored?}
}
\value{
An object of class \code{pop}.
}
\description{
Simulate a family from a pedigree
}
\details{
Other arguments can be passed to internal functions in \code{sim_family}:
\describe{
  \item{\code{dh}}{A logical indicating if double-haploid lines should be created
  at the end of selfing. Doubled-haploids are generated at the last generation
  of selfing (e.g. if \emph{F_3} individuals are specified in the pedigree, DH
  lines are induced after the \emph{F_2}).}
  \item{\code{m}}{The crossover interference parameter. See 
  \code{\link[simcross]{sim_from_pedigree}} for more information. }
  \item{\code{p}}{The proportion of crosses from non-interference process.
  See \code{\link[simcross]{sim_from_pedigree}} for more information.}
  \item{\code{family.num}}{A integer designator of the family.}
  \item{\code{cycle.num}}{A integer designator of the breeding cycle.}
}
}
\examples{

# Simulate a genome
n.mar  <- c(505, 505, 505)
len <- c(120, 130, 140)

genome <- sim_genome(len, n.mar)

# Simulate a quantitative trait influenced by 50 QTL
qtl.model <- matrix(NA, 50, 4)
genome <- sim_gen_model(genome = genome, qtl.model = qtl.model, 
                        add.dist = "geometric", max.qtl = 50)

# Simulate the founder genotypes
founder.pop <- sim_founders(genome)

# Create a pedigree with 100 individuals selfed to the F_3 generation
ped <- sim_pedigree(n.ind = 100, n.selfgen = 2)

fam <- sim_family(genome = genome, pedigree = ped, founder.pop = founder.pop)

# Create a pedigree with 100 RIL individuals
ped <- sim_pedigree(n.ind = 100, n.selfgen = Inf)

fam <- sim_family(genome = genome, pedigree = ped, founder.pop = founder.pop)

# Create a pedigree with 100 doubled-haploid individuals induced after the F_2
# generation.
ped <- sim_pedigree(n.ind = 100, n.selfgen = 2)

fam <- sim_family(genome = genome, pedigree = ped, founder.pop = founder.pop, dh = TRUE)
                  
## The above commands can be run using a hypred genome
genome <- sim_genome(len, n.mar, type = "hypred")

# Simulate a quantitative trait influenced by 50 QTL
qtl.model <- matrix(NA, 50, 4)
genome <- sim_gen_model(genome = genome, qtl.model = qtl.model, 
                        add.dist = "geometric", max.qtl = 50)

# Simulate the founder genotypes
founder.pop <- sim_founders(genome)

ped <- sim_pedigree(n.ind = 100, n.selfgen = 2)

fam <- sim_family(genome = genome, pedigree = ped, founder.pop = founder.pop)

fam <- sim_family(genome = genome, pedigree = ped, founder.pop = founder.pop, dh = TRUE)

 
}
