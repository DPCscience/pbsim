% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genome_functions.R
\name{sim_genome}
\alias{sim_genome}
\title{Create a simulated genome}
\usage{
sim_genome(len, n.mar, map, eq.spacing = FALSE, type = c("pbsim",
  "hypred"))
}
\arguments{
\item{len}{A vector specifying the chromosome lengths (in cM).}

\item{n.mar}{A vector specifying the umber of markers per chromosome.}

\item{map}{A list of marker positions (in cM), where each list element is a named vector of marker positions that
are located on a single chromosome. The names of these elements in the list are chromosome \emph{numbers}. If 
\code{NULL} (default), marker positions are drawn from a uniform distribution. See \code{\link[qtl]{sim.map}} for more
information.}

\item{eq.spacing}{If TRUE, markers will be equally spaced. See \code{\link[qtl]{sim.map}}.}

\item{type}{The type of genome output. If \code{"pbsim"}, the genome will include a 
map that is compatible with \code{\link[qtl]{qtl-package}}, and if \code{"hypred"},
the genome will be a list of genomes compatible with \code{\link[hypred]{hypred}}.}
}
\value{
Object of class "genome" with the length of each chromosome, the number of
markers per chromosome, and the genetic map.
}
\description{
Creates a list containing information on a simulated genome
}
\examples{
n.mar  <- c(505, 505, 505)
len <- c(120, 130, 140)

genome <- sim_genome(len, n.mar)

exp_map <- replicate(1, runif(10), simplify = FALSE)
# This will fail because the vector elements in the list are not mapped
sim_genome(map = exp_map)

# Name the markers
names(exp_map[[1]]) <- paste0("M", seq_along(exp_map[[1]]))
# This will fail because the list is not named.
sim_genome(map = exp_map)

# Give the chromosomes names
names(exp_map) <- "chr1"
# This will fail because the chromosome names are not coercible to numbers
sim_genome(map = exp_map)

# This will work
names(exp_map) <- 1
sim_genome(map = exp_map)


}
